{"version":3,"sources":["components/Image.js","components/Card.js","components/Stack.js","components/Deck.js","components/BoardTile.js","components/Board.js","components/Player.js","App.js","serviceWorker.js","index.js"],"names":["Image","this","props","src","className","style","process","alt","Component","defaultProps","Card","downside","skew","offset","imgSrc","id","transform","right","x","top","y","Stack","cards","list","Fragment","map","c","index","key","Deck","state","opened","closed","review","rnd","min","max","Math","random","refresh","shuffle","console","log","i","j","temp","length","floor","setState","next","pop","push","current","onClick","BoardTile","deg","toggleToken","token","card","fn","left","Board","tokens","Array","fill","restart","boardCards","Player","generateBoard","slice","App","path","to","React","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.08f13679.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class Image extends Component {\r\n    static propTypes = {\r\n        src: PropTypes.string,\r\n        className: PropTypes.string,\r\n        style: PropTypes.object\r\n    }\r\n\r\n    static defaultProps = {\r\n        className: \"card_image\"\r\n    }\r\n\r\n    render() {\r\n        const { src, className, style } = this.props;\r\n        return (\r\n            <img src={ `${process.env.PUBLIC_URL}${src}` } className={ className } alt=\"?\" style={ style } />\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Image from './Image';\r\n\r\nexport default class Card extends Component {\r\n    static propTypes = {\r\n        id: PropTypes.number,\r\n        downside: PropTypes.bool,\r\n        skew: PropTypes.number,\r\n        offset: PropTypes.object\r\n    }\r\n\r\n    static defaultProps = {\r\n        skew: 0,\r\n        offset: {x:0,y:0}\r\n    }\r\n\r\n\r\n    render() {\r\n        const { downside, skew, offset, id } = this.props;\r\n        let imgSrc = '/img/' + id + '.png';\r\n        let style = {};\r\n        if(downside) {\r\n            imgSrc = '/img/B.png';\r\n        } else {            \r\n            style = {\r\n                transform: `rotate(${skew}deg)`,\r\n                right: `${offset.x}rem`,\r\n                top: `${offset.y}rem`,\r\n            };\r\n        }\r\n        return (\r\n            <div className={ downside ? \"back\" : \"card\" } style={ style }>\r\n                <Image src={ `${imgSrc}` } />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Card from './Card';\r\n\r\n\r\nexport default class Stack extends Component {\r\n    static propTypes = {\r\n        cards: PropTypes.array,\r\n        downside: PropTypes.bool,\r\n        list: PropTypes.bool\r\n    }\r\n\r\n    static defaultProps = {\r\n        list: false\r\n    }\r\n\r\n\r\n    render() {\r\n        const { cards, list } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                {\r\n                    list ? (\r\n                        <div className=\"list\">\r\n                            { cards && cards.map((c, index) => {\r\n                                return (\r\n                                    <Card \r\n                                        key={c.id}\r\n                                        id={c.id}\r\n                                        downside={ false }\r\n                                        offset={ {x: -(index * 10), y: 0} }\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                        </div>\r\n                    )\r\n                    : (\r\n                        <div className=\"stack\">\r\n                            { \r\n                                cards && cards.map(c => {\r\n                                    return (\r\n                                        <Card\r\n                                            key={c.id}\r\n                                            id={c.id}\r\n                                            downside={this.props.downside}\r\n                                            skew={ c.skew }\r\n                                            offset={ c.offset }\r\n                                            />\r\n                                            );\r\n                                        })\r\n                            }\r\n                        </div>\r\n                    )\r\n                }   \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Stack from './Stack'\r\n\r\nexport default class Deck extends Component {\r\n    \r\n    state = {\r\n        cards: [],\r\n        opened: [],\r\n        closed: [],\r\n        review: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        const cards = [];\r\n        const offset = 5;\r\n        for(var i = 0; i < 54; i++) {\r\n            cards.push({id: i + 1, skew: this.rnd(-10, 10), offset: {x: this.rnd(-offset,offset), y: this.rnd(-offset, offset)} });\r\n        }\r\n        this.refresh(cards);\r\n    }\r\n\r\n    rnd = (min, max) => {\r\n        return Math.random() * (max - min) + min;\r\n    }\r\n\r\n    refresh = (cards) => {\r\n        this.shuffle(cards);\r\n        console.log(cards);\r\n    }\r\n      \r\n    shuffle = (cards) => {\r\n        let i = 0, j = 0, temp = null;\r\n        \r\n        for (i = cards.length - 1; i > 0; i -= 1) {\r\n            j = Math.floor(Math.random() * (i + 1))\r\n            temp = cards[i]\r\n            cards[i] = cards[j]\r\n            cards[j] = temp\r\n        }\r\n        this.setState({ cards, closed: cards });\r\n    }\r\n\r\n    next = () => {\r\n        const { opened, closed, review } = this.state; \r\n        while(review.length) {\r\n            const c = review.pop();\r\n            opened.push(c);\r\n        }\r\n        const current = closed.pop();\r\n        opened.push(current);\r\n        this.setState({ closed, opened, review });\r\n    }\r\n\r\n    review = () => {\r\n        const { opened, review } = this.state; \r\n        if(review.length >= 8) {\r\n            return;\r\n        }\r\n        const current = opened.pop();\r\n        review.push(current);\r\n        this.setState({ opened, review });\r\n    }\r\n\r\n    render() {\r\n        const { opened, closed, review } = this.state; \r\n        return (\r\n            <div className=\"deck\">\r\n                <div className=\"closed\" onClick={ this.next } >\r\n                    <Stack cards={ closed } downside={true} />\r\n                </div>\r\n                <div className=\"opened\" onClick={ this.review }>\r\n                    <Stack cards={ opened } />\r\n                </div>\r\n                <div className=\"review\">\r\n                    <Stack cards={review} list={ true } />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Image from './Image'\r\n\r\nexport default class BoardTile extends Component {\r\n    static propTypes = {\r\n        card: PropTypes.object,\r\n        token: PropTypes.bool,\r\n        fn: PropTypes.func\r\n    }\r\n    \r\n    rnd = (min, max) => {\r\n        return Math.random() * (max - min) + min;\r\n    }\r\n\r\n    state = {\r\n        offset: {\r\n            x: this.rnd(1, 4),\r\n            y: this.rnd(3, 10),\r\n            deg: this.rnd(0, 360)\r\n        }\r\n    }\r\n\r\n\r\n    toggleToken = () => {\r\n        this.setState({ token: !this.state.token });\r\n    }\r\n\r\n    render() {\r\n        const { card, token, fn } = this.props;\r\n        const { offset } = this.state;\r\n        const style = {\r\n            transform: `rotate(${offset.deg}deg)`,\r\n            left: `${offset.x}vh`,\r\n            top: `${offset.y}vh`\r\n        }\r\n        return (\r\n            <div onClick={ fn } className=\"board_tile\">\r\n                <Image src={ `${card.src}` } className=\"board_image\" />\r\n                {\r\n                    token ? \r\n                        <Image src={ `/img/token.png` } className=\"token\" style={ style } />\r\n                        : null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport BoardTile from './BoardTile';\r\n\r\nexport default class Board extends Component {\r\n    static propTypes = {\r\n        boardCards: PropTypes.array\r\n    }\r\n\r\n    state = {\r\n        tokens: Array(16).fill(false)\r\n    }\r\n\r\n    toggleToken = (i) => {\r\n        const { tokens } = this.state;\r\n        tokens[i] = !tokens[i];\r\n        this.setState({ tokens });\r\n    }\r\n\r\n    restart = () => {\r\n        this.setState({ tokens: Array(16).fill(false)});\r\n    }\r\n\r\n    render() {\r\n        const { boardCards } = this.props;\r\n        const { tokens } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                {\r\n                    boardCards && boardCards.length && \r\n                    <div className=\"board\">\r\n                        <div>\r\n                            <BoardTile card={ boardCards[0] } token={ tokens[0] } fn={ () => { this.toggleToken(0) } } />\r\n                            <BoardTile card={ boardCards[1] } token={ tokens[1] } fn={ () => { this.toggleToken(1) } } />\r\n                            <BoardTile card={ boardCards[2] } token={ tokens[2] } fn={ () => { this.toggleToken(2) } } />\r\n                            <BoardTile card={ boardCards[3] } token={ tokens[3] } fn={ () => { this.toggleToken(3) } } />\r\n                        </div>\r\n                        <div>\r\n                            <BoardTile card={ boardCards[4] } token={ tokens[4] } fn={ () => { this.toggleToken(4) } } />\r\n                            <BoardTile card={ boardCards[5] } token={ tokens[5] } fn={ () => { this.toggleToken(5) } } />\r\n                            <BoardTile card={ boardCards[6] } token={ tokens[6] } fn={ () => { this.toggleToken(6) } } />\r\n                            <BoardTile card={ boardCards[7] } token={ tokens[7] } fn={ () => { this.toggleToken(7) } } />\r\n                        </div>\r\n                        <div>\r\n                            <BoardTile card={ boardCards[8] } token={ tokens[8] } fn={ () => { this.toggleToken(8) } } />\r\n                            <BoardTile card={ boardCards[9] } token={ tokens[9] } fn={ () => { this.toggleToken(9) } } />\r\n                            <BoardTile card={ boardCards[10] } token={ tokens[10] } fn={ () => { this.toggleToken(10) } } />\r\n                            <BoardTile card={ boardCards[11] } token={ tokens[11] } fn={ () => { this.toggleToken(11) } } />\r\n                        </div>\r\n                        <div>\r\n                            <BoardTile card={ boardCards[12] } token={ tokens[12] } fn={ () => { this.toggleToken(12) } } />\r\n                            <BoardTile card={ boardCards[13] } token={ tokens[13] } fn={ () => { this.toggleToken(13) } } />\r\n                            <BoardTile card={ boardCards[14] } token={ tokens[14] } fn={ () => { this.toggleToken(14) } } />\r\n                            <BoardTile card={ boardCards[15] } token={ tokens[15] } fn={ () => { this.toggleToken(15) } } />\r\n                        </div>\r\n                    </div>\r\n                }\r\n                <button onClick={ this.restart }>Reiniciar</button>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Board from './Board'\r\n\r\nexport default class Player extends Component {\r\n    state = {\r\n        cards: [],\r\n        boardCards: []\r\n    }\r\n    \r\n    componentDidMount() {\r\n        const cards = [];\r\n        for(var i = 0; i < 54; i++) {\r\n            cards.push({id: i + 1, src: `/img/${i + 1}.png` });\r\n        }\r\n        this.setState({ cards }, () => {\r\n            this.generateBoard();\r\n        })\r\n    }\r\n\r\n    generateBoard = () => {\r\n        const { cards } = this.state;\r\n        let i = 0, j = 0, temp = null;\r\n        \r\n        for (i = cards.length - 1; i > 0; i -= 1) {\r\n            j = Math.floor(Math.random() * (i + 1))\r\n            temp = cards[i]\r\n            cards[i] = cards[j]\r\n            cards[j] = temp\r\n        }\r\n        const boardCards = cards.slice(0, 16);\r\n        this.setState({ boardCards });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Board boardCards={ this.state.boardCards } />\r\n                <button onClick={ this.generateBoard }>Cambiar</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Deck from './components/Deck';\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\nimport Player from './components/Player';\n\nexport default class App extends React.Component {\n  render () {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/host\">\n            <Deck />\n          </Route>\n          <Route path=\"/player\">\n            <Player />\n          </Route>\n          <Route path=\"/\">\n            <div className=\"start\">\n\n              <Link to=\"/host\" className=\"main-btn\" >Anfitrion</Link>\n              <Link to=\"/player\" className=\"main-btn\">Jugador</Link>\n            </div>\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    );\n  \n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}